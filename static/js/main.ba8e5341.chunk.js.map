{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","SORT_FIELD_REVERSE","App","useState","sortField","setSortField","visibleGoods","goods","isReversed","preparedGoods","map","good","name","length","id","uuidv4","sort","good1","good2","includes","localeCompare","reverse","getPreparedGoods","handleClick","value","filter","field","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"yPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SACpBC,EAAqB,UA8BpB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EA9BR,SAA0BC,EAAOH,EAAWI,GAC1C,IAAIC,EAAgBF,EAAMG,KAAI,SAAAC,GAAI,MAAK,CACrCC,KAAMD,EACNE,OAAQF,EAAKE,OACbC,GAAIC,kBAqBN,OAlByB,IAArBX,EAAUS,SACZJ,EAAgBA,EAAcO,MAAK,SAACC,EAAOC,GACzC,OAAId,EAAUe,SAASpB,GACdkB,EAAK,KAAkBG,cAAcF,EAAK,MAG/Cd,EAAUe,SAASnB,GACdiB,EAAK,OAAsBC,EAAK,OAGlC,MAIPd,EAAUe,SAASlB,KACrBQ,EAAgBA,EAAcY,WAGzBZ,EAKca,CAAiBxB,EAAiBM,GACjDmB,EAAc,SAACC,GACnBnB,EAAaD,EAAUe,SAASK,GAC5BpB,EAAUqB,QAAO,SAAAC,GAAK,OAAIA,IAAUF,KAD3B,sBAELpB,GAFK,CAEMoB,MAGrB,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAazB,EAAUe,SAASpB,KAElC+B,QAAS,kBAAMP,EAAYxB,IAL7B,iCAUA,wBACE6B,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAazB,EAAUe,SAASnB,KAElC8B,QAAS,kBAAMP,EAAYvB,IAL7B,4BAUA,wBACE4B,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAazB,EAAUe,SAASlB,KAElC6B,QAAS,kBAAMP,EAAYtB,IAL7B,qBAUuB,IAArBG,EAAUS,QACV,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPzB,EAAa,KAJjB,sBAYJ,6BACGC,EAAaI,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,EAAKC,MAFDD,EAAKG,aC3GtBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba8e5341.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_REVERSE = 'reverse';\n\nfunction getPreparedGoods(goods, sortField, isReversed) {\n  let preparedGoods = goods.map(good => ({\n    name: good,\n    length: good.length,\n    id: uuidv4(),\n  }));\n\n  if (sortField.length !== 0) {\n    preparedGoods = preparedGoods.sort((good1, good2) => {\n      if (sortField.includes(SORT_FIELD_NAME)) {\n        return good1[SORT_FIELD_NAME].localeCompare(good2[SORT_FIELD_NAME]);\n      }\n\n      if (sortField.includes(SORT_FIELD_LENGTH)) {\n        return good1[SORT_FIELD_LENGTH] - good2[SORT_FIELD_LENGTH];\n      }\n\n      return 0;\n    });\n  }\n\n  if (sortField.includes(SORT_FIELD_REVERSE)) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState([]);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField);\n  const handleClick = (value) => {\n    setSortField(sortField.includes(value)\n      ? sortField.filter(field => field !== value)\n      : [...sortField, value]);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': !sortField.includes(SORT_FIELD_NAME),\n          })}\n          onClick={() => handleClick(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': !sortField.includes(SORT_FIELD_LENGTH),\n          })}\n          onClick={() => handleClick(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !sortField.includes(SORT_FIELD_REVERSE),\n          })}\n          onClick={() => handleClick(SORT_FIELD_REVERSE)}\n        >\n          Reverse\n        </button>\n\n        {(sortField.length !== 0) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good.id}\n          >\n            {good.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}